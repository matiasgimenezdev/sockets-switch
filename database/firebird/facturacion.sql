CREATE DATABASE 'facturacion.fdb';
USER 'SYSDBA' PASSWORD 'masterkey';

SET SQL DIALECT 3;
COMMIT;

CONNECT 'localhost:/firebird/data/facturacion.fdb' user 'sysdba' password 'masterkey';
/********************* ROLES **********************/

/********************* UDFS ***********************/

/********************* FUNCTIONS ***********************/

/****************** SEQUENCES ********************/
SET TERM !!;
CREATE SEQUENCE GEN_CODIGO_PRODUCTO ;
CREATE SEQUENCE GEN_NUMERO_FACTURA ;
/******************** DOMAINS *********************/

/******************* PROCEDURES ******************/

/******************** TABLES **********************/

CREATE TABLE CLIENTE
(
  CODIGO INTEGER NOT NULL,
  NOMBRE VARCHAR(100) NOT NULL,
  APELLIDO VARCHAR(100) NOT NULL,
  CONSTRAINT PK_CLIENTE PRIMARY KEY (CODIGO)
);
CREATE TABLE DETALLE
(
  NUMERO INTEGER NOT NULL,
  CODIGO INTEGER NOT NULL,
  PRECIO DOUBLE PRECISION DEFAULT 0 NOT NULL,
  CANTIDAD INTEGER DEFAULT 1 NOT NULL,
  SUBTOTAL DOUBLE PRECISION,
  CONSTRAINT PK_DETALLE PRIMARY KEY (NUMERO,CODIGO)
);
CREATE TABLE FACTURA
(
  NUMERO INTEGER NOT NULL,
  FECHA DATE NOT NULL,
  MONTO DOUBLE PRECISION DEFAULT 0,
  CODIGO INTEGER,
  CONSTRAINT PK_FACTURA PRIMARY KEY (NUMERO)
);
CREATE TABLE PAGO
(
  NUMERO INTEGER NOT NULL,
  FECHA DATE DEFAULT CURRENT_DATE NOT NULL,
  MONTO DOUBLE PRECISION DEFAULT 0 NOT NULL,
  CONSTRAINT PK_PAGO PRIMARY KEY (NUMERO,FECHA)
);
CREATE TABLE PRODUCTO
(
  CODIGO INTEGER NOT NULL,
  DESCRIPCION VARCHAR(100) NOT NULL,
  STOCK INTEGER DEFAULT 0 NOT NULL,
  PRECIO DOUBLE PRECISION DEFAULT 0 NOT NULL,
  CONSTRAINT PK_PRODUCTO PRIMARY KEY (CODIGO)
);
/********************* VIEWS **********************/

/******************* EXCEPTIONS *******************/

CREATE EXCEPTION EX_PK
'No puede modificar la clave primaria de la tabla';
CREATE EXCEPTION EX_PRECIO
'El precio de facturacion no puede ser menor al precio de lista';
/******************** TRIGGERS ********************/

SET TERM ^ ;
CREATE TRIGGER TRG_AD_DETALLE FOR DETALLE ACTIVE
AFTER DELETE POSITION 0

AS
BEGIN
    UPDATE FACTURA SET MONTO = MONTO - OLD.SUBTOTAL WHERE NUMERO = OLD.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AI_DETALLE FOR DETALLE ACTIVE
AFTER INSERT POSITION 0

AS
BEGIN
    UPDATE FACTURA SET MONTO = MONTO + NEW.SUBTOTAL WHERE NUMERO = NEW.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_AU_DETALLE FOR DETALLE ACTIVE
AFTER UPDATE POSITION 0

AS
BEGIN
    UPDATE FACTURA SET MONTO = MONTO + NEW.SUBTOTAL - OLD.SUBTOTAL WHERE NUMERO = NEW.NUMERO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BI_DETALLE FOR DETALLE ACTIVE
BEFORE INSERT POSITION 0

AS
BEGIN
    NEW.SUBTOTAL = NEW.PRECIO * NEW.CANTIDAD;
    IF(NEW.PRECIO < (SELECT PRECIO FROM PRODUCTO WHERE CODIGO = NEW.CODIGO)) THEN  
        EXCEPTION EX_PRECIO;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_CLIENTE FOR CLIENTE ACTIVE
BEFORE UPDATE POSITION 0

AS
BEGIN
    IF(OLD.CODIGO <> NEW.CODIGO) THEN EXCEPTION EX_PK; 
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_DETALLE FOR DETALLE ACTIVE
BEFORE UPDATE POSITION 0

AS
BEGIN
    IF(NEW.NUMERO <> OLD.NUMERO OR NEW.CODIGO <> NEW.CODIGO) THEN EXCEPTION EX_PK;
    IF(NEW.PRECIO < (SELECT PRECIO FROM PRODUCTO WHERE CODIGO = NEW.CODIGO)) THEN  
        EXCEPTION EX_PRECIO;
    NEW.SUBTOTAL = NEW.PRECIO * NEW.CANTIDAD;
    
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_FACTURA FOR FACTURA ACTIVE
BEFORE UPDATE POSITION 0

AS
BEGIN
    IF(OLD.NUMERO <> NEW.NUMERO) THEN EXCEPTION EX_PK;
END
^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER TRG_BU_PRODUCTO FOR PRODUCTO ACTIVE
BEFORE UPDATE POSITION 0

AS
BEGIN
    IF(NEW.CODIGO <> OLD.CODIGO) THEN EXCEPTION EX_PK;
END
^
SET TERM ; ^

ALTER TABLE DETALLE ADD CONSTRAINT FK_DETALLE_FACTURA
  FOREIGN KEY (NUMERO) REFERENCES FACTURA (NUMERO);
ALTER TABLE DETALLE ADD CONSTRAINT FK_DETALLE_PRODUCTO
  FOREIGN KEY (CODIGO) REFERENCES PRODUCTO (CODIGO);
ALTER TABLE FACTURA ADD CONSTRAINT FK_FACTURA_CLIENTE
  FOREIGN KEY (CODIGO) REFERENCES CLIENTE (CODIGO);
ALTER TABLE FACTURA ADD CONSTRAINT CONSTRAINT_MONTO
  check (MONTO >= 0);
ALTER TABLE PAGO ADD CONSTRAINT FK_PAGO_FACTURA
  FOREIGN KEY (NUMERO) REFERENCES FACTURA (NUMERO);
ALTER TABLE PRODUCTO ADD CONSTRAINT CONSTRAINT_STOCK
  check (STOCK >= 0);
GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON CLIENTE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON DETALLE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON FACTURA TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON PAGO TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON PRODUCTO TO  SYSDBA WITH GRANT OPTION;
 
SET TERM ;!!